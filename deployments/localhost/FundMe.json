{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundersAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gets_priceFeedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe12575302e353d578df1dd62f6a9db4f3a4c8c8fb6497d2350c340fccb75dfb3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "961224",
    "logsBloom": "0x
    "blockHash": "0x96ef3a1857d5298b31bf603fc6cf37ef9ddea2cbbd2e21bceef1bd01033c4e4f",
    "transactionHash": "0xe12575302e353d578df1dd62f6a9db4f3a4c8c8fb6497d2350c340fccb75dfb3",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "961224",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "a79a89a2be3341d6ed17bb82773f15f0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundersAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gets_priceFeedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface priceFeed; \\n    address private s_priceFeedAddress;\\n\\n    constructor(address priceFeedAddress) {\\n        s_priceFeedAddress = priceFeedAddress;\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function getFunder(uint i) public view returns (address) { \\n        return funders[i];\\n\\n    }\\n    \\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    function gets_priceFeedAddress() view public returns(address) {\\n        return s_priceFeedAddress;\\n\\n    }\\n\\n\\n    function getAddressToAmount(address fundersAddress) view public returns(uint256) {\\nreturn addressToAmountFunded[fundersAddress]; \\n    }\\n\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\\n\",\"keccak256\":\"0xf467d7c3dad8c6b85a52043b4043b59ef3433c3d726ab51bc5f52131cb806f30\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xe8f218744ae7a6afcdcf5e0a06074a5ae8b3656271ddfcb469f91cc6b864aa41\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051620010ca380380620010ca83398181016040528101906100349190610160565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061018d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061012d82610102565b9050919050565b61013d81610122565b811461014857600080fd5b50565b60008151905061015a81610134565b92915050565b600060208284031215610176576101756100fd565b5b60006101848482850161014b565b91505092915050565b610f2d806200019d6000396000f3fe60806040526004361061008a5760003560e01c8063b60d428811610059578063b60d42881461014d578063c0f8cffc14610157578063d7b4750c14610194578063dba6335f146101d1578063dc0d3dff146101fc57610099565b806325a4cdae146100a35780633ccfd60b146100ce5780633e47d6f3146100e55780636b69a5921461012257610099565b3661009957610097610239565b005b6100a1610239565b005b3480156100af57600080fd5b506100b8610373565b6040516100c591906108bd565b60405180910390f35b3480156100da57600080fd5b506100e361039d565b005b3480156100f157600080fd5b5061010c60048036038101906101079190610909565b6105df565b604051610119919061094f565b60405180910390f35b34801561012e57600080fd5b506101376105f7565b604051610144919061094f565b60405180910390f35b610155610239565b005b34801561016357600080fd5b5061017e60048036038101906101799190610909565b610604565b60405161018b919061094f565b60405180910390f35b3480156101a057600080fd5b506101bb60048036038101906101b69190610996565b61064c565b6040516101c891906108bd565b60405180910390f35b3480156101dd57600080fd5b506101e6610694565b6040516101f391906108bd565b60405180910390f35b34801561020857600080fd5b50610223600480360381019061021e9190610996565b6106ba565b60405161023091906108bd565b60405180910390f35b6802b5e3af16b1880000610278600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106f990919063ffffffff16565b10156102b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b090610a20565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103079190610a6f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610424576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104cf5760006001828154811061044a57610449610ac5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104c790610af4565b915050610427565b50600067ffffffffffffffff8111156104eb576104ea610b3d565b5b6040519080825280602002602001820160405280156105195781602001602082028036833780820191505090505b506001908051906020019061052f9291906107d5565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161055690610b9d565b60006040518083038185875af1925050503d8060008114610593576040519150601f19603f3d011682016040523d82523d6000602084013e610598565b606091505b50509050806105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390610bfe565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061066257610661610ac5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106106ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061070583610735565b90506000670de0b6b3a7640000858361071e9190610c1e565b6107289190610ca7565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561077e57600080fd5b505afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b69190610d65565b5050509150506402540be400816107cd9190610de0565b915050919050565b82805482825590600052602060002090810192821561084e579160200282015b8281111561084d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107f5565b5b50905061085b919061085f565b5090565b5b80821115610878576000816000905550600101610860565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a78261087c565b9050919050565b6108b78161089c565b82525050565b60006020820190506108d260008301846108ae565b92915050565b600080fd5b6108e68161089c565b81146108f157600080fd5b50565b600081359050610903816108dd565b92915050565b60006020828403121561091f5761091e6108d8565b5b600061092d848285016108f4565b91505092915050565b6000819050919050565b61094981610936565b82525050565b60006020820190506109646000830184610940565b92915050565b61097381610936565b811461097e57600080fd5b50565b6000813590506109908161096a565b92915050565b6000602082840312156109ac576109ab6108d8565b5b60006109ba84828501610981565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a0a601b836109c3565b9150610a15826109d4565b602082019050919050565b60006020820190508181036000830152610a39816109fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7a82610936565b9150610a8583610936565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aba57610ab9610a40565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610aff82610936565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b3257610b31610a40565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b87600083610b6c565b9150610b9282610b77565b600082019050919050565b6000610ba882610b7a565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610be8600b836109c3565b9150610bf382610bb2565b602082019050919050565b60006020820190508181036000830152610c1781610bdb565b9050919050565b6000610c2982610936565b9150610c3483610936565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c6d57610c6c610a40565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cb282610936565b9150610cbd83610936565b925082610ccd57610ccc610c78565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cf781610cd8565b8114610d0257600080fd5b50565b600081519050610d1481610cee565b92915050565b6000819050919050565b610d2d81610d1a565b8114610d3857600080fd5b50565b600081519050610d4a81610d24565b92915050565b600081519050610d5f8161096a565b92915050565b600080600080600060a08688031215610d8157610d806108d8565b5b6000610d8f88828901610d05565b9550506020610da088828901610d3b565b9450506040610db188828901610d50565b9350506060610dc288828901610d50565b9250506080610dd388828901610d05565b9150509295509295909350565b6000610deb82610d1a565b9150610df683610d1a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e3557610e34610a40565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e7257610e71610a40565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610eaf57610eae610a40565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eec57610eeb610a40565b5b82820290509291505056fea2646970667358221220ac85f6714c3a99d4feea7a928bc0e595ea78b044be808f94962636d75413d26564736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063b60d428811610059578063b60d42881461014d578063c0f8cffc14610157578063d7b4750c14610194578063dba6335f146101d1578063dc0d3dff146101fc57610099565b806325a4cdae146100a35780633ccfd60b146100ce5780633e47d6f3146100e55780636b69a5921461012257610099565b3661009957610097610239565b005b6100a1610239565b005b3480156100af57600080fd5b506100b8610373565b6040516100c591906108bd565b60405180910390f35b3480156100da57600080fd5b506100e361039d565b005b3480156100f157600080fd5b5061010c60048036038101906101079190610909565b6105df565b604051610119919061094f565b60405180910390f35b34801561012e57600080fd5b506101376105f7565b604051610144919061094f565b60405180910390f35b610155610239565b005b34801561016357600080fd5b5061017e60048036038101906101799190610909565b610604565b60405161018b919061094f565b60405180910390f35b3480156101a057600080fd5b506101bb60048036038101906101b69190610996565b61064c565b6040516101c891906108bd565b60405180910390f35b3480156101dd57600080fd5b506101e6610694565b6040516101f391906108bd565b60405180910390f35b34801561020857600080fd5b50610223600480360381019061021e9190610996565b6106ba565b60405161023091906108bd565b60405180910390f35b6802b5e3af16b1880000610278600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106f990919063ffffffff16565b10156102b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b090610a20565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103079190610a6f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610424576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104cf5760006001828154811061044a57610449610ac5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104c790610af4565b915050610427565b50600067ffffffffffffffff8111156104eb576104ea610b3d565b5b6040519080825280602002602001820160405280156105195781602001602082028036833780820191505090505b506001908051906020019061052f9291906107d5565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161055690610b9d565b60006040518083038185875af1925050503d8060008114610593576040519150601f19603f3d011682016040523d82523d6000602084013e610598565b606091505b50509050806105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390610bfe565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061066257610661610ac5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106106ca57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061070583610735565b90506000670de0b6b3a7640000858361071e9190610c1e565b6107289190610ca7565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561077e57600080fd5b505afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b69190610d65565b5050509150506402540be400816107cd9190610de0565b915050919050565b82805482825590600052602060002090810192821561084e579160200282015b8281111561084d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107f5565b5b50905061085b919061085f565b5090565b5b80821115610878576000816000905550600101610860565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a78261087c565b9050919050565b6108b78161089c565b82525050565b60006020820190506108d260008301846108ae565b92915050565b600080fd5b6108e68161089c565b81146108f157600080fd5b50565b600081359050610903816108dd565b92915050565b60006020828403121561091f5761091e6108d8565b5b600061092d848285016108f4565b91505092915050565b6000819050919050565b61094981610936565b82525050565b60006020820190506109646000830184610940565b92915050565b61097381610936565b811461097e57600080fd5b50565b6000813590506109908161096a565b92915050565b6000602082840312156109ac576109ab6108d8565b5b60006109ba84828501610981565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a0a601b836109c3565b9150610a15826109d4565b602082019050919050565b60006020820190508181036000830152610a39816109fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7a82610936565b9150610a8583610936565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aba57610ab9610a40565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610aff82610936565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b3257610b31610a40565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b87600083610b6c565b9150610b9282610b77565b600082019050919050565b6000610ba882610b7a565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610be8600b836109c3565b9150610bf382610bb2565b602082019050919050565b60006020820190508181036000830152610c1781610bdb565b9050919050565b6000610c2982610936565b9150610c3483610936565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c6d57610c6c610a40565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610cb282610936565b9150610cbd83610936565b925082610ccd57610ccc610c78565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cf781610cd8565b8114610d0257600080fd5b50565b600081519050610d1481610cee565b92915050565b6000819050919050565b610d2d81610d1a565b8114610d3857600080fd5b50565b600081519050610d4a81610d24565b92915050565b600081519050610d5f8161096a565b92915050565b600080600080600060a08688031215610d8157610d806108d8565b5b6000610d8f88828901610d05565b9550506020610da088828901610d3b565b9450506040610db188828901610d50565b9350506060610dc288828901610d50565b9250506080610dd388828901610d05565b9150509295509295909350565b6000610deb82610d1a565b9150610df683610d1a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e3557610e34610a40565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e7257610e71610a40565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610eaf57610eae610a40565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eec57610eeb610a40565b5b82820290509291505056fea2646970667358221220ac85f6714c3a99d4feea7a928bc0e595ea78b044be808f94962636d75413d26564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 75,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeedAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}